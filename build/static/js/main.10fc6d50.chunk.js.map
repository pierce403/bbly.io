{"version":3,"sources":["IPFSManager.js","App.js","serviceWorker.js","index.js"],"names":["room","App","state","toggle","bubbleList","title","score","id","Math","random","_this","setState","_this2","this","_ref","onAddBubble","ipfs","IPFS","repo","EXPERIMENTAL","pubsub","config","Addresses","Swarm","once","err","info","console","log","Room","on","peer","sendTo","message","data","toString","from","initIPFS","bubble","Object","toConsumableArray","concat","bubbleId","newBubbleList","map","objectSpread","_this3","sortedBubbles","slice","sort","left","right","react_default","a","createElement","className","App_BubbleBlower","key","App_Bubble","onUpvote","handleUpvote","onDownvote","handleDownvote","Component","Bubble","props","onClick","BubbleBlower","value","handleChange","event","_this4","target","handleSubmit","thing","broadcast","preventDefault","onSubmit","type","placeholder","name","onChange","onMouseEnter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10fc6d50.chunk.js","sourcesContent":["import IPFS from \"ipfs\";\nimport Room from \"ipfs-pubsub-room\";\n\nlet room;\n\nexport function broadcastThing(thing) {\n  room.broadcast(thing);\n}\n\nexport function initIPFS({ onAddBubble }) {\n  const ipfs = new IPFS({\n    repo: \"ipfs/pubsub-demo/\" + Math.random(),\n    EXPERIMENTAL: {\n      pubsub: true\n    },\n    config: {\n      Addresses: {\n        Swarm: [\n          \"/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star\"\n          //\"/dns4/wrtc-star.discovery.libp2p.io/tcp/443/wss/p2p-webrtc-star\"\n        ]\n      }\n    }\n  });\n\n  ipfs.once(\"ready\", () =>\n    ipfs.id((err, info) => {\n      if (err) {\n        throw err;\n      }\n      console.log(\"IPFS node ready with address \" + info.id);\n\n      room = Room(ipfs, \"bbly-news\");\n\n      room.on(\"peer joined\", peer => console.log(\"peer \" + peer + \" joined\"));\n      room.on(\"peer left\", peer => console.log(\"peer \" + peer + \" left\"));\n\n      // send and receive messages\n      room.on(\"peer joined\", peer => room.sendTo(peer, \"Hello \" + peer + \"!\"));\n      room.on(\"message\", message => {\n        //const newBubble = new Bubble();\n        //newBubble.title = ;\n\n        onAddBubble({\n          title: message.data.toString(),\n          score: 0,\n          id: \"bubble\" + Math.random()\n        });\n        //bubbleList.push(newBubble);\n        console.log(\n          \"got message from \" + message.from + \": \" + message.data.toString()\n        );\n      });\n\n      // broadcast message every 2 seconds\n      //setInterval(() => room.broadcast(\"OMG BUBBLES!\"), 2000);\n    })\n  );\n}\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { initIPFS, broadcastThing } from \"./IPFSManager\";\n\nclass App extends Component {\n  state = {\n    toggle: true,\n    bubbleList: [\n      { title: \"first thing\", score: 0, id: \"bubble\" + Math.random() },\n      { title: \"second thing\", score: 1, id: \"bubble\" + Math.random() },\n      { title: \"third thing\", score: 2, id: \"bubble\" + Math.random() }\n    ]\n  };\n\n  componentDidMount() {\n    initIPFS({\n      onAddBubble: bubble => {\n        this.setState({ bubbleList: [...this.state.bubbleList, bubble] });\n      }\n    });\n  }\n\n  toggle = () => {\n    this.setState({ toggle: !this.state.toggle });\n  };\n\n  handleUpvote(bubbleId) {\n    const newBubbleList = this.state.bubbleList.map(bubble => {\n      if (bubble.id === bubbleId) {\n        return { ...bubble, score: bubble.score + 1 };\n      } else {\n        return bubble;\n      }\n    });\n    this.setState({ bubbleList: newBubbleList });\n  }\n\n  handleDownvote(bubbleId) {\n    const newBubbleList = this.state.bubbleList.map(bubble => {\n      if (bubble.id === bubbleId) {\n        return { ...bubble, score: bubble.score - 1 };\n      } else {\n        return bubble;\n      }\n    });\n    this.setState({ bubbleList: newBubbleList });\n  }\n\n  render() {\n    const sortedBubbles = this.state.bubbleList.slice();\n    sortedBubbles.sort((left, right) => {\n      if (left.score > right.score) {\n        return -1;\n      } else if (left.score < right.score) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n\n          <BubbleBlower />\n          <br />\n\n          <ul className=\"list-group\">\n            {sortedBubbles.slice(0, 10).map(bubble => {\n              return (\n                <li key={bubble.id} className=\"list-group-item\">\n                  <Bubble\n                    title={bubble.title}\n                    score={bubble.score}\n                    onUpvote={() => this.handleUpvote(bubble.id)}\n                    onDownvote={() => this.handleDownvote(bubble.id)}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n\n          {/* <button onClick={this.toggle}>show/hide</button>\n          {this.state.toggle && (\n            <p>\n              Edit <code>src/App.js </code> and save potato.\n            </p>\n          )} */}\n        </header>\n      </div>\n    );\n  }\n}\n\nclass Bubble extends Component {\n  render() {\n    return (\n      <div className=\"card border-secondary mb-3 text-left\">\n        <div className=\"card-body\">\n          <button className=\"btn btn-outline-secondary\">\n            {this.props.score}\n          </button>\n\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={this.props.onUpvote}\n          >\n            <span className=\"fa fa-smile-o\" />\n          </button>\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={this.props.onDownvote}\n          >\n            <span className=\"fa fa-frown-o\" />\n          </button>\n          {this.props.title}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass BubbleBlower extends Component {\n  state = { value: \"\" };\n\n  render() {\n    return (\n      <div className=\"BubbleBlower\">\n        <form onSubmit={this.handleSubmit} className=\"from-inline\">\n          <div className=\"input-group mb-2 mr-sm-2 mb-sm-0\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"inlineFormInputGroup\"\n              placeholder=\"story title\"\n              name=\"name\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              onMouseEnter={() => console.log(\"enter\")}\n            />\n          </div>\n\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn btn-outline-secondary\"\n          />\n        </form>\n      </div>\n    );\n  }\n\n  handleChange = event => {\n    // console.log(event.target.value);\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = event => {\n    console.log(\"A new story was submitted: \" + this.state.value);\n    broadcastThing(this.state.value);\n    event.preventDefault();\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}