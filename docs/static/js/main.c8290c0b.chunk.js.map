{"version":3,"sources":["IPFSManager.js","App.js","serviceWorker.js","index.js"],"names":["room","peerCount","bubbleList","getTopBubbles","sortedBubbles","slice","sort","left","right","score","broadcastThing","thing","broadcast","localStorage","getItem","console","log","title","link","summary","awesome","hilarious","enlightening","solidarity","scammy","poopy","hateful","id","JSON","parse","App","state","toggle","topBubbles","_this2","this","_ref","onBubbleChange","onPeerChange","ipfs","IPFS","repo","Math","random","EXPERIMENTAL","pubsub","config","Addresses","Swarm","once","err","info","Room","on","peer","message","messageObject","data","toString","x","length","setItem","stringify","push","initIPFS","setState","newCount","react_default","a","createElement","className","App_BblyNavbar","App_BubbleBlower","map","bubble","key","App_Bubble","onAwesome","type","emotion","onHilarious","onEnlightening","onSolidarity","onScammy","onPoopy","onHateful","Component","Bubble","props","onClick","BblyNavbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","placeholder","BubbleBlower","value","handleChange","event","_this3","target","handleSubmit","preventDefault","round","onSubmit","name","onChange","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8290c0b.chunk.js","sourcesContent":["import IPFS from \"ipfs\";\nimport Room from \"ipfs-pubsub-room\";\n\nlet room;\nlet peerCount = 0;\n\nlet bubbleList = [];\nif (localStorage.getItem(\"bubbleList\") == null) {\n  console.log(\"loading default bubbles\");\n  bubbleList = [\n    {\n      title: \"Welcome to BBLY.IO!\",\n      link: \"https://bbly.io\",\n      summary: \"This site is pretty fun, hope you enjoy it!\",\n      score: 0,\n      awesome: 0,\n      hilarious: 0,\n      enlightening: 0,\n      solidarity: 0,\n      scammy: 0,\n      poopy: 0,\n      hateful: 0,\n\n      id: \"bubble-777\"\n    }\n  ];\n} else {\n  console.log(\"loading stored bubbles\");\n  bubbleList = JSON.parse(localStorage.getItem(\"bubbleList\"));\n}\n\nexport function getTopBubbles() {\n  const sortedBubbles = bubbleList.slice();\n  sortedBubbles.sort((left, right) => {\n    if (left.score > right.score) {\n      return -1;\n    } else if (left.score < right.score) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n\n  return sortedBubbles;\n}\n\nexport function broadcastThing(thing) {\n  room.broadcast(thing);\n}\n\nexport function initIPFS({ onBubbleChange, onPeerChange }) {\n  const ipfs = new IPFS({\n    repo: \"ipfs/pubsub-demo/\" + Math.random(),\n    EXPERIMENTAL: {\n      pubsub: true\n    },\n    config: {\n      Addresses: {\n        Swarm: [\n          //\"/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star\"\n          \"/dns4/wrtc-star.discovery.libp2p.io/tcp/443/wss/p2p-webrtc-star\"\n        ]\n      }\n    }\n  });\n\n  ipfs.once(\"ready\", () =>\n    ipfs.id((err, info) => {\n      if (err) {\n        throw err;\n      }\n      console.log(\"IPFS node ready with address \" + info.id);\n\n      room = Room(ipfs, \"bbly-news\");\n\n      room.on(\"peer joined\", peer => {\n        console.log(\"peer \" + peer + \" joined\");\n\n        peerCount++;\n        onPeerChange(peerCount);\n      });\n      room.on(\"peer left\", peer => {\n        console.log(\"peer \" + peer + \" left\");\n        peerCount--;\n        onPeerChange(peerCount);\n      });\n\n      // send and receive messages\n      // room.on(\"peer joined\", peer => room.sendTo(peer, \"Hello \" + peer + \"!\"));\n\n      room.on(\"message\", message => {\n        const messageObject = JSON.parse(message.data.toString());\n        console.log(messageObject);\n\n        if (messageObject[\"type\"] === \"vote\") {\n          for (let x = 0; x < bubbleList.length; ++x) {\n            // find the bubble\n            if (bubbleList[x].id === messageObject[\"id\"]) {\n              if (messageObject[\"emotion\"] === \"awesome\")\n                bubbleList[x].awesome++;\n              if (messageObject[\"emotion\"] === \"hilarious\")\n                bubbleList[x].hilarious++;\n              if (messageObject[\"emotion\"] === \"enlightening\")\n                bubbleList[x].enlightening++;\n              if (messageObject[\"emotion\"] === \"solidarity\")\n                bubbleList[x].solidarity++;\n              if (messageObject[\"emotion\"] === \"scammy\") bubbleList[x].scammy++;\n              if (messageObject[\"emotion\"] === \"poopy\") bubbleList[x].poopy++;\n              if (messageObject[\"emotion\"] === \"hateful\")\n                bubbleList[x].hateful++;\n\n              bubbleList[x].score =\n                bubbleList[x].awesome +\n                bubbleList[x].hilarious +\n                bubbleList[x].enlightening +\n                bubbleList[x].solidarity -\n                bubbleList[x].scammy -\n                bubbleList[x].poopy -\n                bubbleList[x].hateful * 10;\n            }\n          }\n\n          console.log(\"stored \" + bubbleList.length + \" bubbles!\");\n          localStorage.setItem(\"bubbleList\", JSON.stringify(bubbleList));\n          onBubbleChange();\n          return;\n        }\n\n        if (messageObject[\"type\"] === \"story\") {\n          bubbleList.push({\n            title: messageObject[\"title\"],\n            score: 0,\n            awesome: 0,\n            hilarious: 0,\n            enlightening: 0,\n            solidarity: 0,\n            hateful: 0,\n            poopy: 0,\n            scammy: 0,\n\n            id: messageObject[\"id\"]\n          });\n\n          onBubbleChange();\n        }\n      });\n    })\n  );\n}\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { initIPFS, broadcastThing, getTopBubbles } from \"./IPFSManager\";\n\nclass App extends Component {\n  state = {\n    peerCount: 0,\n    toggle: true,\n    topBubbles: getTopBubbles()\n  };\n\n  componentDidMount() {\n    initIPFS({\n      onBubbleChange: () => {\n        this.setState({ topBubbles: getTopBubbles() });\n      },\n      onPeerChange: newCount => {\n        this.setState({ peerCount: newCount });\n      }\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <BblyNavbar />\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          peers: {this.state.peerCount}\n          <BubbleBlower />\n          <br />\n          <ul className=\"list-group\">\n            {this.state.topBubbles.map(bubble => {\n              return (\n                <li key={bubble.id} className=\"list-group-item\">\n                  <Bubble\n                    title={bubble.title}\n                    score={bubble.score}\n                    awesome={bubble.awesome}\n                    hilarious={bubble.hilarious}\n                    enlightening={bubble.enlightening}\n                    solidarity={bubble.solidarity}\n                    scammy={bubble.scammy}\n                    poopy={bubble.poopy}\n                    hateful={bubble.hateful}\n                    onAwesome={() => {\n                      broadcastThing(\n                        JSON.stringify({\n                          type: \"vote\",\n                          emotion: \"awesome\",\n                          id: bubble.id\n                        })\n                      );\n                    }}\n                    onHilarious={() => {\n                      broadcastThing(\n                        JSON.stringify({\n                          type: \"vote\",\n                          emotion: \"hilarious\",\n                          id: bubble.id\n                        })\n                      );\n                    }}\n                    onEnlightening={() => {\n                      broadcastThing(\n                        JSON.stringify({\n                          type: \"vote\",\n                          emotion: \"enlightening\",\n                          id: bubble.id\n                        })\n                      );\n                    }}\n                    onSolidarity={() => {\n                      broadcastThing(\n                        JSON.stringify({\n                          type: \"vote\",\n                          emotion: \"solidarity\",\n                          id: bubble.id\n                        })\n                      );\n                    }}\n                    onScammy={() => {\n                      broadcastThing(\n                        JSON.stringify({\n                          type: \"vote\",\n                          emotion: \"scammy\",\n                          id: bubble.id\n                        })\n                      );\n                    }}\n                    onPoopy={() => {\n                      broadcastThing(\n                        JSON.stringify({\n                          type: \"vote\",\n                          emotion: \"poopy\",\n                          id: bubble.id\n                        })\n                      );\n                    }}\n                    onHateful={() => {\n                      broadcastThing(\n                        JSON.stringify({\n                          type: \"vote\",\n                          emotion: \"hateful\",\n                          id: bubble.id\n                        })\n                      );\n                    }}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </header>\n      </div>\n    );\n  }\n}\n\nclass Bubble extends Component {\n  render() {\n    return (\n      <div className=\"card border-secondary mb-3 m-3 text-left\">\n        <div className=\"card-body\">\n          <button className=\"btn btn-outline-secondary m-1\">\n            {this.props.score}\n          </button>\n          <span className=\"m-3\">{this.props.title}</span>\n          <br />\n          <button\n            className=\"btn btn-outline-secondary m-1\"\n            onClick={this.props.onAwesome}\n          >\n            <span className=\"fa fa-grin-stars\"> {this.props.awesome} </span>\n          </button>\n          <button\n            className=\"btn btn-outline-secondary m-1\"\n            onClick={this.props.onHilarious}\n          >\n            <span className=\"fa fa-grin-squint-tears\">\n              {\" \"}\n              {this.props.hilarious}{\" \"}\n            </span>\n          </button>\n          <button\n            className=\"btn btn-outline-secondary m-1\"\n            onClick={this.props.onEnlightening}\n          >\n            <span className=\"fa fa-lightbulb\"> {this.props.enlightening} </span>\n          </button>\n          <button\n            className=\"btn btn-outline-secondary m-1\"\n            onClick={this.props.onSolidarity}\n          >\n            <span className=\"fa fa-fist-raised\"> {this.props.solidarity} </span>\n          </button>{\" \"}\n          <button\n            className=\"btn btn-outline-secondary m-1\"\n            onClick={this.props.onScammy}\n          >\n            <span className=\"fa fa-dollar-sign\"> {this.props.scammy} </span>\n          </button>\n          <button\n            className=\"btn btn-outline-secondary m-1\"\n            onClick={this.props.onPoopy}\n          >\n            <span className=\"fa fa-poop\"> {this.props.poopy} </span>\n          </button>\n          <button\n            className=\"btn btn-outline-secondary m-1\"\n            onClick={this.props.onHateful}\n          >\n            <span className=\"fa fa-skull\"> {this.props.hateful} </span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass BblyNavbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondy\">\n        <button\n          className=\"navbar-toggler navbar-toggler-right\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarTogglerDemo03\"\n          aria-controls=\"navbarTogglerDemo03\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <a className=\"navbar-brand\" href=\"#!\">\n          Navbar\n        </a>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n          <ul className=\"navbar-nav mr-auto mt-2 mt-md-0\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#!\">\n                Home <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#!\">\n                Link\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"#!\">\n                Disabled\n              </a>\n            </li>\n          </ul>\n          <form className=\"form-inline my-2 my-lg-0\">\n            <input\n              className=\"form-control mr-sm-2\"\n              type=\"text\"\n              placeholder=\"Search\"\n            />\n          </form>\n        </div>\n      </nav>\n    );\n  }\n}\n\nclass BubbleBlower extends Component {\n  state = { value: \"\" };\n\n  render() {\n    return (\n      <div className=\"BubbleBlower\">\n        <form onSubmit={this.handleSubmit} className=\"from-inline\">\n          <div className=\"input-group mb-2 mr-sm-2 mb-sm-0\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"inlineFormInputGroup\"\n              placeholder=\"story title\"\n              name=\"name\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              //onMouseEnter={() => console.log(\"enter\")}\n            />\n          </div>\n\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn btn-outline-secondary\"\n          />\n        </form>\n      </div>\n    );\n  }\n\n  handleChange = event => {\n    // console.log(event.target.value);\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"A new story was submitted: \" + this.state.value);\n    broadcastThing(\n      JSON.stringify({\n        type: \"story\",\n        title: this.state.value,\n        id: \"bubble-\" + Math.round(Math.random() * 1000000)\n      })\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}